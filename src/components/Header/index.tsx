import React from "react";
import TastyPizzaImg from "../../assets/img/favicon.png";
import {
  Drawer,
  Button,
  Group,
  Input,
  PasswordInput,
  createStyles,
  Menu,
  Center,
  Modal,
  Header as MantineHeaeder,
} from "@mantine/core";
import InputMask from "react-input-mask";
import { switchTheme } from "../../redux/slices/themeSlice";
import { useDispatch } from "react-redux";
import {
  IconUser,
  IconShoppingCart,
  IconSunHigh,
  IconMoon,
  IconUserCircle,
  IconLogout,
  IconPizza,
  IconMenu2,
} from "@tabler/icons";
import { Link } from "react-router-dom";
import { useAppSelector } from "../../redux/hooks/hook";
import {
  getAuth,
  signInWithEmailAndPassword,
  createUserWithEmailAndPassword,
} from "firebase/auth";
import { useAppDispatch } from "../../redux/hooks/hook";
import { removeUser, setUser } from "../../redux/slices/userSlice";
import { useAuth } from "../../redux/hooks/useAuth";
import { showNotification } from "@mantine/notifications";

interface FormsProps {
  handleClick: (email: string, pass: string) => void;
}

const useStyles = createStyles(() => ({
  header: {
    textAlign: "center",
  },
}));

const Header: React.FC<FormsProps> = () => {
  const [opened, setOpened] = React.useState(false);
  const [opened1, setOpened1] = React.useState(false);
  const { classes } = useStyles();
  const dispatch = useDispatch();
  const [openModal, setOpenModal] = React.useState(false);
  const [emailReg, setEmailReg] = React.useState("");
  const [pswReg, setPswReg] = React.useState("");
  const [emailAuth, setEmailAuth] = React.useState("");
  const [pswAuth, setPswAuth] = React.useState("");

  const handleOpenModal1 = () => {
    setOpenModal(true);
  };
  const theme = useAppSelector((state) => state.themeState.theme);

  const handleLogin = (email: string, password: string) => {
    const auth = getAuth();
    signInWithEmailAndPassword(auth, email, password)
      .then(({ user }) => {
        console.log(user);
        dispatch(
          setUser({
            email: user.email,
            id: user.uid,
            token: user.refreshToken,
          })
        );
        localStorage.setItem("email", email);
        localStorage.setItem("password", password);
        setOpened1(false);
      })
      .catch(() => alert("Invalid user!"));
  };

  const handleRegister = (email: string, password: string) => {
    const auth = getAuth();
    createUserWithEmailAndPassword(auth, email, password)
      .then(({ user }) => {
        console.log(user);
        dispatch(
          setUser({
            email: user.email,
            id: user.uid,
            token: user.refreshToken,
          })
        );
        localStorage.setItem("email", email);
        setOpened(false);
      })
      .catch(console.error);
  };

  const { isAuth, email } = useAuth();

  const exitUser = () => {
    dispatch(removeUser());
    localStorage.removeItem("email");
  };
  return (
    <MantineHeaeder
      height={100}
      style={{
        position: "fixed",
        width: "100%",
        zIndex: "10",
      }}
    >
      <Group>
        <Group noWrap position="apart" style={{ width: "100%" }}>
          <Group>
            <Link to="/">
              <img
                src={TastyPizzaImg}
                className="w-28 rounded-full"
                style={{
                  width: "100px",
                  borderRadius: "10%",
                  marginRight: "10px",
                }}
              />
            </Link>
            <h1 className="font-bold text-6xl ml-4">Tasty pizza</h1>
          </Group>

          <Group>
            <Menu shadow="md" width={300}>
              {isAuth && (
                <>
                  <IconUserCircle />
                  <p>{email}</p>
                </>
              )}
              <Menu.Target>
                <Button
                  leftIcon={<IconMenu2 />}
                  variant="gradient"
                  gradient={{ from: "orange", to: "red" }}
                >
                  –ú–µ–Ω—é
                </Button>
              </Menu.Target>
              <Menu.Dropdown>
                {!isAuth ? (
                  <>
                    <Menu.Label>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</Menu.Label>
                    <Menu.Item
                      onClick={() => setOpened(true)}
                      icon={<IconUser />}
                    >
                      –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                    </Menu.Item>
                    <Menu.Item
                      onClick={() => setOpened1(true)}
                      icon={<IconUser />}
                    >
                      –í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç
                    </Menu.Item>
                  </>
                ) : (
                  <>
                    <Menu.Label>–î–µ–π—Å—Ç–≤–∏—è —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º</Menu.Label>
                    <Menu.Item onClick={() => exitUser()} icon={<IconLogout />}>
                      –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
                    </Menu.Item>
                  </>
                )}
                <Menu.Label>–†–∞–∑–Ω–æ–µ</Menu.Label>
                <Menu.Item
                  component={Link}
                  to={"/pizzatypes"}
                  icon={<IconPizza />}
                >
                  –í–∏–¥—ã –ø–∏—Ü—Ü
                </Menu.Item>
                <Menu.Item
                  onClick={() => dispatch(switchTheme())}
                  icon={theme === "light" ? <IconMoon /> : <IconSunHigh />}
                >
                  –°–º–µ–Ω–∏—Ç—å —Ç–µ–º—É
                </Menu.Item>
              </Menu.Dropdown>
            </Menu>
            {!isAuth ? (
              <Button
                variant="gradient"
                gradient={{ from: "orange", to: "red" }}
                mr={100}
                leftIcon={<IconShoppingCart />}
                onClick={() =>
                  showNotification({
                    title: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω",
                    message:
                      "–ß—Ç–æ–±—ã –∑–∞–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É –≤–∞–º –Ω—É–∂–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è!ü§•",
                  })
                }
              >
                –ö–æ—Ä–∑–∏–Ω–∞
              </Button>
            ) : (
              <Link to="/cart">
                <Button
                  variant="gradient"
                  gradient={{ from: "orange", to: "red" }}
                  mr={100}
                  leftIcon={<IconShoppingCart />}
                >
                  –ö–æ—Ä–∑–∏–Ω–∞
                </Button>
              </Link>
            )}
          </Group>
        </Group>
      </Group>
      <Drawer
        className="text-3xl"
        position="right"
        opened={opened}
        onClose={() => setOpened(false)}
        title="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"
        padding="xl"
        size="xl"
        classNames={{
          header: classes.header,
        }}
      >
        <Input.Wrapper
          className="text-left"
          label="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email"
          required
        >
          <Input
            placeholder="email"
            size="md"
            className="mb-2"
            value={emailReg}
            onChange={(event: {
              target: { value: React.SetStateAction<string> };
            }) => setEmailReg(event.target.value)}
          />
        </Input.Wrapper>
        <Input.Wrapper
          className="text-left"
          label="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω"
          required
        >
          <Input
            component={InputMask}
            mask="+7 (999) 999-99-99"
            placeholder="+7 (999) 999-99-99"
          />
        </Input.Wrapper>
        <PasswordInput
          value={pswReg}
          onChange={(event) => setPswReg(event.target.value)}
          label="–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å"
          placeholder="–ü–∞—Ä–æ–ª—å"
          required
        />
        <Group position="center" mt="xl">
          <Button
            variant="gradient"
            gradient={{ from: "orange", to: "red" }}
            onClick={() => handleRegister(emailReg, pswReg)}
          >
            –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
          </Button>
        </Group>
      </Drawer>
      <Drawer
        className="text-3xl"
        position="right"
        opened={opened1}
        onClose={() => setOpened1(false)}
        title="–í–æ–π—Ç–∏"
        padding="xl"
        size="xl"
        classNames={{
          header: classes.header,
        }}
      >
        <Input.Wrapper
          className="text-left"
          label="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email"
          required
        >
          <Input
            value={emailAuth}
            onChange={(event: {
              target: { value: React.SetStateAction<string> };
            }) => setEmailAuth(event.target.value)}
            placeholder="email"
            size="md"
            className="mb-2"
          />
        </Input.Wrapper>
        <PasswordInput
          value={pswAuth}
          onChange={(e) => setPswAuth(e.target.value)}
          label="–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å"
          placeholder="–ü–∞—Ä–æ–ª—å"
          required
        />
        <Group position="center" mt="xl">
          <Button
            onClick={() => handleLogin(emailAuth, pswAuth)}
            variant="gradient"
            gradient={{ from: "orange", to: "red" }}
          >
            –í–æ–π—Ç–∏
          </Button>
        </Group>
      </Drawer>
    </MantineHeaeder>
  );
};

export default Header;
